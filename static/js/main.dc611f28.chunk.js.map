{"version":3,"sources":["store/modules/todos.ts","store/modules/filter.ts","components/modalService/Modal.tsx","components/TodoListItem.tsx","components/TodoList.tsx","components/AddTodoForm.tsx","components/TodoFilter.tsx","components/modalService/index.tsx","containers/TodoListContainer.tsx","App.tsx","store/modules/index.ts","utils/localStorage.ts","index.tsx","store/configureStore.ts"],"names":["uuidv4","require","CREATE_TODO","CHANGE_INPUT","TOGGLE_TODO","REMOVE_TODO","EDIT_TODO","todosActions","create","text","type","payload","id","complete","date","Date","changeInput","input","toggle","todo","remove","edit","initialState","todoItems","SET_FILTER","filterActions","setFilter","filterType","resolve","TodoListItem","toggleTodo","editTodo","deleteTodo","useState","newText","setNewText","isEditing","setIsEditing","ref","useRef","useEffect","current","style","height","scrollHeight","focus","className","checked","onChange","htmlFor","value","e","target","computed","window","getComputedStyle","parseInt","getPropertyValue","spellCheck","moment","format","onClick","preventDefault","trim","TodoList","filter","completedItems","notCompletedItems","length","reverse","map","key","AddTodoForm","addTodo","placeholder","TodoFilter","clickFilter","undefined","defaultProps","Modal","props","handleCancel","setState","isOpen","handleConfirm","show","showConfirmProps","createConfirmProps","Promise","res","state","containerElement","document","createElement","body","appendChild","render","this","message","title","isAlert","Fragment","Component","connect","todos","dispatch","TodosActions","bindActionCreators","FilterActions","selectedTodo","a","modalService","App","combineReducers","action","loadState","serializedState","localStorage","getItem","JSON","parse","err","saveState","stringify","setItem","Error","store","persistedState","createStore","modules","__REDUX_DEVTOOLS_EXTENSION__","subscribe","getState","configureStore","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.dc611f28.chunk.js","sourcesContent":["const uuidv4 = require('uuid/v4');\n\nexport interface TodoState {\n  todoItems: Array<Todo>;\n  input: string;\n}\n\n\nexport const CREATE_TODO = \"todo/CREATE_TODO\";\nexport const CHANGE_INPUT = \"todo/CHANGE_INPUT\";\nexport const TOGGLE_TODO = \"todo/TOGGLE_TODO\";\nexport const REMOVE_TODO = \"todo/REMOVE_TODO\";\nexport const EDIT_TODO = \"todo/EDIT_TODO\";\n\ninterface CreateAction {\n  type: typeof CREATE_TODO;\n  payload: Todo;\n}\n\ninterface ChangeInputAction {\n  type: typeof CHANGE_INPUT;\n  payload: {\n    input: string;\n  };\n}\n\ninterface ToggleAction {\n  type: typeof TOGGLE_TODO;\n  payload: {\n    todo: object;\n  };\n}\n\ninterface RemoveAction {\n  type: typeof REMOVE_TODO;\n  payload: {\n    todo: object;\n  };\n}\n\ninterface EditAction {\n  type: typeof EDIT_TODO;\n  payload: {\n    todo: object;\n    input: string;\n  };\n}\n\nexport type TodoActionTypes =\n  | CreateAction\n  | ChangeInputAction\n  | ToggleAction\n  | RemoveAction\n  | EditAction;\n\nfunction create(text: string) {\n  return {\n    type: CREATE_TODO,\n    payload: {\n      id: uuidv4(),\n      text: text,\n      complete: false,\n      date: new Date()\n    }\n  };\n}\n\nfunction changeInput(input: string) {\n  return {\n    type: CHANGE_INPUT,\n    payload: {\n      input\n    }\n  };\n}\n\nfunction toggle(todo: object) {\n  return {\n    type: TOGGLE_TODO,\n    payload: {\n      todo\n    }\n  };\n}\n\nfunction remove(todo: object) {\n  return {\n    type: REMOVE_TODO,\n    payload: {\n      todo\n    }\n  };\n}\n\nfunction edit(todo: object, input: string) {\n  return {\n    type: EDIT_TODO,\n    payload: {\n      todo,\n      input\n    }\n  };\n}\n\nexport const todosActions = {\n  create,\n  changeInput,\n  toggle,\n  remove,\n  edit\n};\n\nconst initialState: TodoState = {\n  todoItems: [],\n  input: \"\"\n};\n\nexport function todosReducer(\n  state = initialState,\n  action: TodoActionTypes\n): TodoState {\n  switch (action.type) {\n    case CREATE_TODO:\n      return {\n        input: \"\",\n        todoItems: [...state.todoItems, action.payload]\n      };\n    case CHANGE_INPUT:\n      return {\n        ...state,\n        input: action.payload.input\n      };\n    case REMOVE_TODO:\n      return {\n        ...state,\n        todoItems: state.todoItems.filter(todo => todo !== action.payload.todo)\n      };\n    case TOGGLE_TODO:\n      return {\n        ...state,\n        todoItems: state.todoItems.map(todo => {\n          if (todo === action.payload.todo) {\n            todo.complete = !todo.complete;\n          }\n          return todo;\n        })\n      };\n    case EDIT_TODO:\n      return {\n        ...state,\n        todoItems: state.todoItems.map(todo => {\n          if (todo === action.payload.todo) {\n            todo.text = action.payload.input;\n          }\n          return todo;\n        })\n      };\n    default:\n      return state;\n  }\n}\n","export interface FilterState {\n  filterType: string;\n}\n\nexport const SET_FILTER = \"filter/SET_FILTER\";\n\ninterface setFilterAction {\n  type: typeof SET_FILTER;\n  payload: {\n    filterType: string;\n  };\n}\n\nexport type FilterActionTypes = setFilterAction;\n\nfunction setFilter(filterType: string) {\n  return {\n    type: SET_FILTER,\n    payload: {\n      filterType\n    }\n  };\n}\n\nexport const filterActions = {\n  setFilter\n};\n\nconst initialState: FilterState = {\n  filterType: \"all\"\n};\n\nexport function filterReducer(\n  state = initialState,\n  action: FilterActionTypes\n): FilterState {\n  switch (action.type) {\n    case SET_FILTER:\n      return {\n        filterType: action.payload.filterType\n      };\n    default:\n      return state;\n  }\n}\n","import React, { Component } from \"react\";\nimport { render } from \"react-dom\";\n\nlet resolve: Function;\n\nconst defaultProps = {\n  title: \"확인\",\n  message: \"정말 실행하시겠습니까?\"\n};\n\nclass Modal extends Component<ModalProps, ModalState> {\n  static create(props = {}) {\n    const containerElement = document.createElement(\"div\");\n    document.body.appendChild(containerElement);\n    return render(<Modal createConfirmProps={props} />, containerElement);\n  }\n\n  constructor(props: ModalProps) {\n    super(props);\n\n    this.state = {\n      isOpen: false,\n      showConfirmProps: {}\n    };\n  }\n\n  handleCancel = () => {\n    this.setState({ isOpen: false });\n    resolve(false);\n  };\n\n  handleConfirm = () => {\n    this.setState({ isOpen: false });\n    resolve(true);\n  };\n\n  show = (props = {}) => {\n    const showConfirmProps = { ...this.props.createConfirmProps, ...props };\n    this.setState({ isOpen: true, showConfirmProps });\n    return new Promise(res => {\n      resolve = res;\n    });\n  };\n\n  render() {\n    const { isOpen, showConfirmProps } = this.state;\n    const { message, title, isAlert } = showConfirmProps;\n    return (\n      <React.Fragment>\n        {isOpen && (\n          <div className=\"modal-overlay\">\n            <div className=\"modal\">\n              <div className=\"modal-wrapper\">\n                <header className=\"modal-header\">\n                  <p className=\"modal-title\">{title || defaultProps.title}</p>\n                </header>\n                <section className=\"modal-body\">\n                  <p>{message || defaultProps.message}</p>\n                </section>\n                <footer className=\"modal-footer\">\n                  <button\n                    className=\"primary button\"\n                    onClick={this.handleConfirm}\n                  >\n                    확인\n                  </button>\n                  {!isAlert && (\n                    <button\n                      className=\"secondary button\"\n                      onClick={this.handleCancel}\n                    >\n                      취소\n                    </button>\n                  )}\n                </footer>\n              </div>\n            </div>\n          </div>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Modal;\n","import React, { useState, ChangeEvent, useEffect, useRef } from \"react\";\nimport moment from \"moment\";\nimport {\n  FaClock,\n  FaEdit,\n  FaTrashAlt,\n  FaCheckCircle,\n  FaTimesCircle\n} from \"react-icons/fa\";\n\ninterface TodoListItemProps {\n  todo: Todo;\n  toggleTodo: ToggleTodo;\n  editTodo: EditTodo;\n  deleteTodo: DeleteTodo;\n}\n\nexport const TodoListItem: React.FC<TodoListItemProps> = ({\n  todo,\n  toggleTodo,\n  editTodo,\n  deleteTodo\n}) => {\n  const [newText, setNewText] = useState(todo.text);\n  const [isEditing, setIsEditing] = useState(false);\n\n  const ref = useRef<HTMLTextAreaElement>(null);\n\n  useEffect(() => {\n    const { current } = ref;\n    if (current) {\n      current.style.height = `${current.scrollHeight}px`;\n      current.focus();\n    }\n  });\n\n  const handleChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\n    const { value } = e.target;\n\n    setNewText(value);\n\n    // textarea 스크롤 길이 변경\n    e.target.style.height = \"inherit\";\n\n    const computed = window.getComputedStyle(e.target);\n    const height =\n      parseInt(computed.getPropertyValue(\"border-top-width\"), 10) +\n      parseInt(computed.getPropertyValue(\"padding-top\"), 10) +\n      e.target.scrollHeight +\n      parseInt(computed.getPropertyValue(\"padding-bottom\"), 10) +\n      parseInt(computed.getPropertyValue(\"border-bottom-width\"), 10);\n\n    e.target.style.height = `${height}px`;\n  };\n\n  const handleEdit = (e: React.MouseEvent<HTMLElement>) => {\n    e.preventDefault();\n    editTodo(todo, newText);\n    if (newText.trim()) {\n      setIsEditing(!isEditing);\n    }\n  };\n\n  const handleToggleEdit = (e: React.MouseEvent<HTMLElement>) => {\n    e.preventDefault();\n    setIsEditing(!isEditing);\n  };\n\n  const handleCancel = (e: React.MouseEvent<HTMLElement>) => {\n    e.preventDefault();\n    setIsEditing(!isEditing);\n    setNewText(todo.text);\n  };\n  return (\n    <li className=\"todo-list-item\">\n      <div className={`item-header${todo.complete ? \" complete\" : \"\"}`}>\n        <input\n          id={todo.id}\n          type=\"checkbox\"\n          checked={todo.complete}\n          onChange={() => toggleTodo(todo)}\n          className=\"checkbox\"\n        />\n        <label htmlFor={todo.id}></label>\n\n        {/* 수정 모드일 때 textArea 노출 */}\n        {isEditing ? (\n          <textarea\n            className=\"textarea\"\n            value={newText}\n            onChange={handleChange}\n            ref={ref}\n            spellCheck={false}\n          />\n        ) : (\n          <p>{todo.text}</p>\n        )}\n      </div>\n      <div className=\"item-footer\">\n        <p className=\"item-timestamp\">\n          <FaClock />\n          <span>{moment(todo.date).format(\"YYYY년 MM월 DD일 HH시 mm분\")}</span>\n        </p>\n\n        {/* 수정 모드일 때 완료/취소 버튼 노출 */}\n        {isEditing && (\n          <div className=\"item-functions\">\n            <button onClick={handleEdit}>\n              <FaCheckCircle />\n              <span>완료</span>\n            </button>\n            <button onClick={handleCancel}>\n              <FaTimesCircle />\n              <span>취소</span>\n            </button>\n          </div>\n        )}\n\n        {/* 수정 모드가 아닐 때 수정 버튼 노출 */}\n        {!isEditing && (\n          <div className=\"item-functions\">\n            <button onClick={handleToggleEdit}>\n              <FaEdit />\n              <span>수정</span>\n            </button>\n\n            {/* 수정 모드가 아니면서 완료된 Todo일 때 삭제 버튼 노출 */}\n            {todo.complete && (\n              <button onClick={() => deleteTodo(todo)}>\n                <FaTrashAlt />\n                <span>삭제</span>\n              </button>\n            )}\n          </div>\n        )}\n      </div>\n    </li>\n  );\n};\n","import React from \"react\";\nimport { TodoListItem } from \"./TodoListItem\";\n\ninterface TodoListProps {\n  todoItems: Array<Todo>;\n  toggleTodo: ToggleTodo;\n  editTodo: EditTodo;\n  deleteTodo: DeleteTodo;\n  filter: string;\n}\n\nexport const TodoList: React.FC<TodoListProps> = ({\n  todoItems,\n  toggleTodo,\n  editTodo,\n  deleteTodo,\n  filter\n}) => {\n  const completedItems = todoItems.filter(todo => todo.complete);\n  const notCompletedItems = todoItems.filter(todo => !todo.complete);\n\n  const NoneText = () => {\n    if (filter === \"all\" && !completedItems.length && !notCompletedItems.length)\n      return <p className=\"todo-none-text\">할 일이 없습니다.</p>;\n    if (filter === \"active\" && !notCompletedItems.length)\n      return <p className=\"todo-none-text\">미완료된 일이 없습니다.</p>;\n    if (filter === \"completed\" && !completedItems.length)\n      return <p className=\"todo-none-text\">완료된 일이 없습니다.</p>;\n    else {\n      return null;\n    }\n  };\n\n  return (\n    <div className=\"todo-list\">\n      <NoneText />\n      <ul>\n        {(filter === \"active\" || filter === \"all\") &&\n          notCompletedItems.reverse().map(todo => {\n            return (\n              <TodoListItem\n                key={todo.id}\n                todo={todo}\n                toggleTodo={toggleTodo}\n                editTodo={editTodo}\n                deleteTodo={deleteTodo}\n              />\n            );\n          })}\n        {(filter === \"completed\" || filter === \"all\") &&\n          completedItems.reverse().map(todo => {\n            return (\n              <TodoListItem\n                key={todo.id}\n                todo={todo}\n                toggleTodo={toggleTodo}\n                editTodo={editTodo}\n                deleteTodo={deleteTodo}\n              />\n            );\n          })}\n      </ul>\n    </div>\n  );\n};\n","import React, { ChangeEvent, FormEvent } from \"react\";\nimport { FaPlus } from \"react-icons/fa\";\n\ninterface AddtodoFormProps {\n  input: string;\n  addTodo: AddTodo;\n  changeInput: ChangeTodo;\n}\n\nexport const AddTodoForm: React.FC<AddtodoFormProps> = ({\n  addTodo,\n  changeInput,\n  input\n}) => {\n  const handleChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\n    changeInput(e.target.value);\n  };\n\n  const handleSubmit = (e: FormEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n    addTodo(input);\n  };\n\n  return (\n    <form className=\"form add-todo-form\">\n      <textarea\n        className=\"textarea\"\n        value={input}\n        onChange={handleChange}\n        placeholder=\"할 일을 입력해 주세요.\"\n      />\n      <button\n        className={`button ${!input.trim().length ? \" disabled\" : \"\"}`}\n        type=\"submit\"\n        onClick={handleSubmit}\n      >\n        <FaPlus />\n      </button>\n    </form>\n  );\n};\n","import React from \"react\";\n\ninterface TodoFilterProps {\n  clickFilter: ClickFilter;\n  filter: string;\n}\n\nexport const TodoFilter: React.FC<TodoFilterProps> = ({\n  clickFilter,\n  filter\n}) => {\n  return (\n    <div className=\"todo-filter\">\n      <button\n        className={filter === \"all\" ? \"active\" : undefined}\n        onClick={() => clickFilter(\"all\")}\n      >\n        전체\n      </button>\n      <button\n        className={filter === \"active\" ? \"active\" : undefined}\n        onClick={() => clickFilter(\"active\")}\n      >\n        미완료\n      </button>\n      <button\n        className={filter === \"completed\" ? \"active\" : undefined}\n        onClick={() => clickFilter(\"completed\")}\n      >\n        완료\n      </button>\n    </div>\n  );\n};\n","import Modal from './Modal';\n\nexport default Modal.create({});","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { StoreState } from \"../store/modules\";\nimport { todosActions } from \"../store/modules/todos\";\nimport { filterActions } from \"../store/modules/filter\";\nimport { TodoList } from \"../components/TodoList\";\nimport { AddTodoForm } from \"../components/AddTodoForm\";\nimport { TodoFilter } from \"../components/TodoFilter\";\nimport modalService from \"../components/modalService\";\n\ninterface TodoListContainerProps {\n  todoItems: Array<Todo>;\n  input: string;\n  TodosActions: typeof todosActions;\n  FilterActions: typeof filterActions;\n  filter: string;\n}\n\nconst TodoListContainer: React.FC<TodoListContainerProps> = ({\n  todoItems,\n  input,\n  TodosActions,\n  FilterActions,\n  filter\n}) => {\n  const toggleTodo: ToggleTodo = selectedTodo => {\n    TodosActions.toggle(selectedTodo);\n  };\n\n  const editTodo: EditTodo = async (selectedTodo, input) => {\n    if (input.trim()) {\n      TodosActions.edit(selectedTodo, input);\n    } else {\n      await (modalService as any).show({\n        title: \"알림\",\n        message: \"공백은 입력하실 수 없습니다.\",\n        isAlert: true\n      });\n    }\n  };\n\n  const deleteTodo: DeleteTodo = async selectedTodo => {\n    const result = await (modalService as any).show({\n      message: \"정말 삭제하시겠습니까?\",\n      isAlert: false\n    });\n    if (result) {\n      TodosActions.remove(selectedTodo);\n    }\n  };\n\n  const addTodo: AddTodo = async input => {\n    if (input.trim()) {\n      TodosActions.create(input);\n    } else {\n      await (modalService as any).show({\n        title: \"알림\",\n        message: \"공백은 입력하실 수 없습니다.\",\n        isAlert: true\n      });\n    }\n  };\n\n  const changeInput: ChangeTodo = input => {\n    TodosActions.changeInput(input);\n  };\n\n  const clickFilter: ClickFilter = filter => {\n    FilterActions.setFilter(filter);\n  };\n\n  return (\n    <div className=\"container\">\n      <TodoFilter clickFilter={clickFilter} filter={filter} />\n      <AddTodoForm addTodo={addTodo} input={input} changeInput={changeInput} />\n      <TodoList\n        todoItems={todoItems}\n        toggleTodo={toggleTodo}\n        editTodo={editTodo}\n        deleteTodo={deleteTodo}\n        filter={filter}\n      />\n    </div>\n  );\n};\n\nexport default connect(\n  ({ todos, filter }: StoreState) => ({\n    input: todos.input,\n    todoItems: todos.todoItems,\n    filter: filter.filterType\n  }),\n  dispatch => ({\n    TodosActions: bindActionCreators(todosActions, dispatch),\n    FilterActions: bindActionCreators(filterActions, dispatch)\n  })\n)(TodoListContainer);\n","import React from \"react\";\nimport TodoListContainers from \"./containers/TodoListContainer\";\n\nconst App: React.FC = () => {\n  return (\n    <React.Fragment>\n      <TodoListContainers />\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { TodoState, todosReducer as todos } from \"./todos\";\nimport { FilterState, filterReducer as filter } from \"./filter\";\n\nexport interface StoreState {\n  todos: TodoState;\n  filter: FilterState;\n}\n\nexport default combineReducers<StoreState>({\n  todos,\n  filter\n});\n","export const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('state');\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = (state: object) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch (e) {\n    throw new Error(e)\n  }\n};","import \"react-app-polyfill/ie9\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./sass/main.scss\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./store/configureStore\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","import modules, { StoreState } from \"./modules\";\nimport { createStore, Store } from \"redux\";\nimport { loadState, saveState } from '../utils/localStorage'\n\nexport default function configureStore(): Store<StoreState> {\n  const persistedState = loadState();\n  const store = createStore(\n    modules,\n    persistedState,\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__ &&\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__()\n  );\n\n  store.subscribe(() => {\n    saveState({\n      todos: {\n        input: '',\n        todoItems: store.getState().todos.todoItems\n      }\n    });\n  });\n  return store;\n}\n"],"sourceRoot":""}