{"version":3,"sources":["store/modules/todos.ts","hooks/useTodos.tsx","components/modalService/Modal.tsx","components/modalService/index.tsx","components/TodoListItem.tsx","store/modules/filter.ts","hooks/useFilter.tsx","components/TodoList.tsx","components/AddTodoForm.tsx","components/TodoFilter.tsx","App.tsx","store/modules/index.ts","utils/localStorage.ts","index.tsx","store/configureStore.ts"],"names":["uuidv4","require","CREATE_TODO","CHANGE_INPUT","TOGGLE_TODO","REMOVE_TODO","EDIT_TODO","todosActions","create","text","type","payload","id","complete","date","Date","changeInput","input","toggle","todo","remove","edit","initialState","todoItems","useTodos","dispatch","useDispatch","useSelector","state","todos","addTodo","useCallback","toggleTodo","deleteTodo","editTodo","resolve","defaultProps","Modal","props","handleCancel","setState","isOpen","handleConfirm","show","showConfirmProps","createConfirmProps","Promise","res","containerElement","document","createElement","body","appendChild","render","this","message","title","isAlert","Fragment","className","onClick","Component","TodoListItem","useState","newText","setNewText","isEditing","setIsEditing","ref","useRef","useEffect","current","style","height","scrollHeight","focus","handleEdit","e","a","preventDefault","trim","modalService","handleDelete","checked","onChange","htmlFor","value","target","computed","window","getComputedStyle","parseInt","getPropertyValue","spellCheck","moment","format","SET_FILTER","filterActions","setFilter","filterType","useFilter","filter","clickFilter","TodoList","completedItems","notCompletedItems","length","reverse","map","key","AddTodoForm","useAddTodo","handleSubmit","placeholder","TodoFilter","undefined","App","combineReducers","action","loadState","serializedState","localStorage","getItem","JSON","parse","err","saveState","stringify","setItem","Error","store","persistedState","createStore","modules","__REDUX_DEVTOOLS_EXTENSION__","subscribe","getState","configureStore","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.5bfb2599.chunk.js","sourcesContent":["const uuidv4 = require(\"uuid/v4\");\n\nexport interface TodoState {\n  todoItems: Array<Todo>;\n  input: string;\n}\n\nexport const CREATE_TODO = \"todo/CREATE_TODO\";\nexport const CHANGE_INPUT = \"todo/CHANGE_INPUT\";\nexport const TOGGLE_TODO = \"todo/TOGGLE_TODO\";\nexport const REMOVE_TODO = \"todo/REMOVE_TODO\";\nexport const EDIT_TODO = \"todo/EDIT_TODO\";\n\ninterface CreateAction {\n  type: typeof CREATE_TODO;\n  payload: Todo;\n}\n\ninterface ChangeInputAction {\n  type: typeof CHANGE_INPUT;\n  payload: {\n    input: string;\n  };\n}\n\ninterface ToggleAction {\n  type: typeof TOGGLE_TODO;\n  payload: {\n    todo: object;\n  };\n}\n\ninterface RemoveAction {\n  type: typeof REMOVE_TODO;\n  payload: {\n    todo: object;\n  };\n}\n\ninterface EditAction {\n  type: typeof EDIT_TODO;\n  payload: {\n    todo: object;\n    input: string;\n  };\n}\n\nexport type TodoActionTypes =\n  | CreateAction\n  | ChangeInputAction\n  | ToggleAction\n  | RemoveAction\n  | EditAction;\n\nfunction create(text: string) {\n  return {\n    type: CREATE_TODO,\n    payload: {\n      id: uuidv4(),\n      text: text,\n      complete: false,\n      date: new Date()\n    }\n  };\n}\n\nfunction changeInput(input: string) {\n  return {\n    type: CHANGE_INPUT,\n    payload: {\n      input\n    }\n  };\n}\n\nfunction toggle(todo: object) {\n  return {\n    type: TOGGLE_TODO,\n    payload: {\n      todo\n    }\n  };\n}\n\nfunction remove(todo: object) {\n  return {\n    type: REMOVE_TODO,\n    payload: {\n      todo\n    }\n  };\n}\n\nfunction edit(todo: object, input: string) {\n  return {\n    type: EDIT_TODO,\n    payload: {\n      todo,\n      input\n    }\n  };\n}\n\nexport const todosActions = {\n  create,\n  changeInput,\n  toggle,\n  remove,\n  edit\n};\n\nconst initialState: TodoState = {\n  todoItems: [],\n  input: \"\"\n};\n\nexport function todosReducer(\n  state = initialState,\n  action: TodoActionTypes\n): TodoState {\n  switch (action.type) {\n    case CREATE_TODO:\n      return {\n        input: \"\",\n        todoItems: [...state.todoItems, action.payload]\n      };\n    case CHANGE_INPUT:\n      return {\n        ...state,\n        input: action.payload.input\n      };\n    case REMOVE_TODO:\n      return {\n        ...state,\n        todoItems: state.todoItems.filter(todo => todo !== action.payload.todo)\n      };\n    case TOGGLE_TODO:\n      return {\n        ...state,\n        todoItems: state.todoItems.map(todo => {\n          if (todo === action.payload.todo) {\n            todo.complete = !todo.complete;\n          }\n          return todo;\n        })\n      };\n    case EDIT_TODO:\n      return {\n        ...state,\n        todoItems: state.todoItems.map(todo => {\n          if (todo === action.payload.todo) {\n            todo.text = action.payload.input;\n          }\n          return todo;\n        })\n      };\n    default:\n      return state;\n  }\n}\n","import { StoreState } from \"../store/modules\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useCallback } from \"react\";\nimport { todosActions } from \"../store/modules/todos\";\n\nexport default function useTodos() {\n  const dispatch = useDispatch();\n\n  const todoItems = useSelector((state: StoreState) => state.todos.todoItems);\n  const input = useSelector((state: StoreState) => state.todos.input);\n\n  const addTodo = useCallback(input => dispatch(todosActions.create(input)), [\n    dispatch\n  ]);\n\n  const toggleTodo = useCallback(todo => dispatch(todosActions.toggle(todo)), [\n    dispatch\n  ]);\n\n  const deleteTodo = useCallback(todo => dispatch(todosActions.remove(todo)), [\n    dispatch\n  ]);\n\n  const editTodo = useCallback(\n    (todo, input) => dispatch(todosActions.edit(todo, input)),\n    [dispatch]\n  );\n\n  const changeInput = useCallback(\n    input => dispatch(todosActions.changeInput(input)),\n    [dispatch]\n  );\n\n  return {\n    todoItems,\n    input,\n    addTodo,\n    toggleTodo,\n    deleteTodo,\n    editTodo,\n    changeInput\n  };\n}\n","import React, { Component } from \"react\";\nimport { render } from \"react-dom\";\n\nlet resolve: Function;\n\nconst defaultProps = {\n  title: \"확인\",\n  message: \"정말 실행하시겠습니까?\"\n};\n\nclass Modal extends Component<ModalProps, ModalState> {\n  static create(props = {}) {\n    const containerElement = document.createElement(\"div\");\n    document.body.appendChild(containerElement);\n    return render(<Modal createConfirmProps={props} />, containerElement);\n  }\n\n  constructor(props: ModalProps) {\n    super(props);\n\n    this.state = {\n      isOpen: false,\n      showConfirmProps: {}\n    };\n  }\n\n  handleCancel = () => {\n    this.setState({ isOpen: false });\n    resolve(false);\n  };\n\n  handleConfirm = () => {\n    this.setState({ isOpen: false });\n    resolve(true);\n  };\n\n  show = (props = {}) => {\n    const showConfirmProps = { ...this.props.createConfirmProps, ...props };\n    this.setState({ isOpen: true, showConfirmProps });\n    return new Promise(res => {\n      resolve = res;\n    });\n  };\n\n  render() {\n    const { isOpen, showConfirmProps } = this.state;\n    const { message, title, isAlert } = showConfirmProps;\n    return (\n      <React.Fragment>\n        {isOpen && (\n          <div className=\"modal-overlay\">\n            <div className=\"modal\">\n              <div className=\"modal-wrapper\">\n                <header className=\"modal-header\">\n                  <p className=\"modal-title\">{title || defaultProps.title}</p>\n                </header>\n                <section className=\"modal-body\">\n                  <p>{message || defaultProps.message}</p>\n                </section>\n                <footer className=\"modal-footer\">\n                  <button\n                    className=\"primary button\"\n                    onClick={this.handleConfirm}\n                  >\n                    확인\n                  </button>\n                  {!isAlert && (\n                    <button\n                      className=\"secondary button\"\n                      onClick={this.handleCancel}\n                    >\n                      취소\n                    </button>\n                  )}\n                </footer>\n              </div>\n            </div>\n          </div>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Modal;\n","import Modal from './Modal';\n\nexport default Modal.create({});","import React, { useState, ChangeEvent, useEffect, useRef } from \"react\";\nimport moment from \"moment\";\nimport useTodos from \"../hooks/useTodos\";\nimport modalService from \"../components/modalService\";\n\nimport {\n  FaClock,\n  FaEdit,\n  FaTrashAlt,\n  FaCheckCircle,\n  FaTimesCircle\n} from \"react-icons/fa\";\n\ninterface TodoListItemProps {\n  todo: Todo;\n  toggleTodo: ToggleTodo;\n  editTodo: EditTodo;\n  deleteTodo: DeleteTodo;\n}\n\nexport const TodoListItem: React.FC<TodoListItemProps> = ({ todo }) => {\n  const { toggleTodo, deleteTodo, editTodo } = useTodos();\n  const [newText, setNewText] = useState(todo.text);\n  const [isEditing, setIsEditing] = useState(false);\n\n  const ref = useRef<HTMLTextAreaElement>(null);\n\n  useEffect(() => {\n    const { current } = ref;\n    if (current) {\n      current.style.height = `${current.scrollHeight}px`;\n      current.focus();\n    }\n  });\n\n  const handleChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\n    const { value } = e.target;\n\n    setNewText(value);\n\n    // textarea 스크롤 길이 변경\n    e.target.style.height = \"inherit\";\n\n    const computed = window.getComputedStyle(e.target);\n    const height =\n      parseInt(computed.getPropertyValue(\"border-top-width\"), 10) +\n      parseInt(computed.getPropertyValue(\"padding-top\"), 10) +\n      e.target.scrollHeight +\n      parseInt(computed.getPropertyValue(\"padding-bottom\"), 10) +\n      parseInt(computed.getPropertyValue(\"border-bottom-width\"), 10);\n\n    e.target.style.height = `${height}px`;\n  };\n\n  const handleEdit = async (e: React.MouseEvent<HTMLElement>) => {\n    e.preventDefault();\n    if (newText.trim()) {\n      editTodo(todo, newText);\n      setIsEditing(!isEditing);\n    } else {\n      await (modalService as any).show({\n        title: \"알림\",\n        message: \"공백은 입력하실 수 없습니다.\",\n        isAlert: true\n      });\n    }\n  };\n\n  const handleDelete = async (e: React.MouseEvent<HTMLElement>) => {\n    e.preventDefault();\n    const result = await (modalService as any).show({\n      message: \"정말 삭제하시겠습니까?\",\n      isAlert: false\n    });\n    if (result) {\n      deleteTodo(todo);\n    }\n  };\n\n  const handleToggleEdit = (e: React.MouseEvent<HTMLElement>) => {\n    e.preventDefault();\n    setIsEditing(!isEditing);\n  };\n\n  const handleCancel = (e: React.MouseEvent<HTMLElement>) => {\n    e.preventDefault();\n    setIsEditing(!isEditing);\n    setNewText(todo.text);\n  };\n\n  return (\n    <li className=\"todo-list-item\">\n      <div className={`item-header${todo.complete ? \" complete\" : \"\"}`}>\n        <input\n          id={todo.id}\n          type=\"checkbox\"\n          checked={todo.complete}\n          onChange={() => toggleTodo(todo)}\n          className=\"checkbox\"\n        />\n        <label htmlFor={todo.id}></label>\n\n        {/* 수정 모드일 때 textArea 노출 */}\n        {isEditing ? (\n          <textarea\n            className=\"textarea\"\n            value={newText}\n            onChange={handleChange}\n            ref={ref}\n            spellCheck={false}\n          />\n        ) : (\n          <p>{todo.text}</p>\n        )}\n      </div>\n      <div className=\"item-footer\">\n        <p className=\"item-timestamp\">\n          <FaClock />\n          <span>{moment(todo.date).format(\"YYYY년 MM월 DD일 HH시 mm분\")}</span>\n        </p>\n\n        {/* 수정 모드일 때 완료/취소 버튼 노출 */}\n        {isEditing && (\n          <div className=\"item-functions\">\n            <button onClick={handleEdit}>\n              <FaCheckCircle />\n              <span>완료</span>\n            </button>\n            <button onClick={handleCancel}>\n              <FaTimesCircle />\n              <span>취소</span>\n            </button>\n          </div>\n        )}\n\n        {/* 수정 모드가 아닐 때 수정 버튼 노출 */}\n        {!isEditing && (\n          <div className=\"item-functions\">\n            <button onClick={handleToggleEdit}>\n              <FaEdit />\n              <span>수정</span>\n            </button>\n\n            {/* 수정 모드가 아니면서 완료된 Todo일 때 삭제 버튼 노출 */}\n            {todo.complete && (\n              <button onClick={handleDelete}>\n                <FaTrashAlt />\n                <span>삭제</span>\n              </button>\n            )}\n          </div>\n        )}\n      </div>\n    </li>\n  );\n};\n","export interface FilterState {\n  filterType: string;\n}\n\nexport const SET_FILTER = \"filter/SET_FILTER\";\n\ninterface setFilterAction {\n  type: typeof SET_FILTER;\n  payload: {\n    filterType: string;\n  };\n}\n\nexport type FilterActionTypes = setFilterAction;\n\nfunction setFilter(filterType: string) {\n  return {\n    type: SET_FILTER,\n    payload: {\n      filterType\n    }\n  };\n}\n\nexport const filterActions = {\n  setFilter\n};\n\nconst initialState: FilterState = {\n  filterType: \"all\"\n};\n\nexport function filterReducer(\n  state = initialState,\n  action: FilterActionTypes\n): FilterState {\n  switch (action.type) {\n    case SET_FILTER:\n      return {\n        filterType: action.payload.filterType\n      };\n    default:\n      return state;\n  }\n}\n","import { StoreState } from \"../store/modules\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useCallback } from \"react\";\nimport { filterActions } from \"../store/modules/filter\";\n\nexport default function useFilter() {\n  const dispatch = useDispatch();\n  const filter = useSelector((state: StoreState) => state.filter.filterType);\n\n  const clickFilter = useCallback(\n    filter => dispatch(filterActions.setFilter(filter)),\n    [dispatch]\n  );\n\n  return { filter, clickFilter };\n}\n","import React from \"react\";\nimport { TodoListItem } from \"./TodoListItem\";\nimport useTodos from \"../hooks/useTodos\";\nimport useFilter from \"../hooks/useFilter\";\n\nexport const TodoList: React.FC = () => {\n  const { todoItems, toggleTodo, editTodo, deleteTodo } = useTodos();\n  const { filter } = useFilter();\n  const completedItems = todoItems.filter(todo => todo.complete);\n  const notCompletedItems = todoItems.filter(todo => !todo.complete);\n\n  const NoneText = () => {\n    if (filter === \"all\" && !completedItems.length && !notCompletedItems.length)\n      return <p className=\"todo-none-text\">할 일이 없습니다.</p>;\n    if (filter === \"active\" && !notCompletedItems.length)\n      return <p className=\"todo-none-text\">미완료된 일이 없습니다.</p>;\n    if (filter === \"completed\" && !completedItems.length)\n      return <p className=\"todo-none-text\">완료된 일이 없습니다.</p>;\n    else {\n      return null;\n    }\n  };\n\n  return (\n    <div className=\"todo-list\">\n      <NoneText />\n      <ul>\n        {(filter === \"active\" || filter === \"all\") &&\n          notCompletedItems.reverse().map(todo => {\n            return (\n              <TodoListItem\n                key={todo.id}\n                todo={todo}\n                toggleTodo={toggleTodo}\n                editTodo={editTodo}\n                deleteTodo={deleteTodo}\n              />\n            );\n          })}\n        {(filter === \"completed\" || filter === \"all\") &&\n          completedItems.reverse().map(todo => {\n            return (\n              <TodoListItem\n                key={todo.id}\n                todo={todo}\n                toggleTodo={toggleTodo}\n                editTodo={editTodo}\n                deleteTodo={deleteTodo}\n              />\n            );\n          })}\n      </ul>\n    </div>\n  );\n};\n","import React, { ChangeEvent, FormEvent } from \"react\";\nimport { FaPlus } from \"react-icons/fa\";\nimport useAddTodo from \"../hooks/useTodos\";\nimport modalService from \"../components/modalService\";\n\nexport const AddTodoForm: React.FC = () => {\n  const { addTodo, changeInput, input } = useAddTodo();\n\n  const handleChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\n    changeInput(e.target.value);\n  };\n\n  const handleSubmit = async (e: FormEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n    if (input.trim()) {\n      addTodo(input);\n    } else {\n      await (modalService as any).show({\n        title: \"알림\",\n        message: \"공백은 입력하실 수 없습니다.\",\n        isAlert: true\n      });\n    }\n  };\n\n  return (\n    <form className=\"form add-todo-form\">\n      <textarea\n        className=\"textarea\"\n        value={input}\n        onChange={handleChange}\n        placeholder=\"할 일을 입력해 주세요.\"\n      />\n      <button\n        className={`button ${!input.trim().length ? \" disabled\" : \"\"}`}\n        type=\"submit\"\n        onClick={handleSubmit}\n      >\n        <FaPlus />\n      </button>\n    </form>\n  );\n};\n","import React from \"react\";\nimport useFilter from \"../hooks/useFilter\";\n\nexport const TodoFilter: React.FC = () => {\n  const { filter, clickFilter } = useFilter();\n  return (\n    <div className=\"todo-filter\">\n      <button\n        className={filter === \"all\" ? \"active\" : undefined}\n        onClick={() => clickFilter(\"all\")}\n      >\n        전체\n      </button>\n      <button\n        className={filter === \"active\" ? \"active\" : undefined}\n        onClick={() => clickFilter(\"active\")}\n      >\n        미완료\n      </button>\n      <button\n        className={filter === \"completed\" ? \"active\" : undefined}\n        onClick={() => clickFilter(\"completed\")}\n      >\n        완료\n      </button>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { TodoList } from \"./components/TodoList\";\nimport { AddTodoForm } from \"./components/AddTodoForm\";\nimport { TodoFilter } from \"./components/TodoFilter\";\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"container\">\n      <TodoFilter />\n      <AddTodoForm />\n      <TodoList />\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { TodoState, todosReducer as todos } from \"./todos\";\nimport { FilterState, filterReducer as filter } from \"./filter\";\n\nexport interface StoreState {\n  todos: TodoState;\n  filter: FilterState;\n}\n\nexport default combineReducers<StoreState>({\n  todos,\n  filter\n});\n","export const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('state');\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = (state: object) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch (e) {\n    throw new Error(e)\n  }\n};","import \"react-app-polyfill/ie9\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./sass/main.scss\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./store/configureStore\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","import modules, { StoreState } from \"./modules\";\nimport { createStore, Store } from \"redux\";\nimport { loadState, saveState } from '../utils/localStorage'\n\nexport default function configureStore(): Store<StoreState> {\n  const persistedState = loadState();\n  const store = createStore(\n    modules,\n    persistedState,\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__ &&\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__()\n  );\n\n  store.subscribe(() => {\n    saveState({\n      todos: {\n        input: '',\n        todoItems: store.getState().todos.todoItems\n      }\n    });\n  });\n  return store;\n}\n"],"sourceRoot":""}